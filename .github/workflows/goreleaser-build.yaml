name: GoReleaser Build

on:
  workflow_call:
    inputs:
      GCP_PROJECT:
        required: false
        type: string
        default: "cyderes-dev"

      ARTIFACT_REGISTRY_HOST:
        required: false
        type: string
        default: "us-central1-docker.pkg.dev"

      ARTIFACT_REGISTRY_REPO:
        required: false
        type: string
        default: "cyderes-container-repo"

      APPLICATION_VERSION:
        required: false
        type: string
        default: "latest"

      GORELEASER_VERSION:
        required: false
        type: string
        default: "latest"

      GORELEASER_ARGS:
        required: false
        type: string
        default: "goreleaser release --snapshot --skip-publish --skip-sign --clean --debug"

      GO_MOD_PATH:
        required: false
        type: string
        default: "go.mod"

      GOPRIVATE:
        required: false
        type: string
        default: "github.com/FishtechCSOC"

      CGO_ENABLED:
        required: false
        type: string
        default: "0"
    secrets:
      GCP_SERVICE_ACCOUNT:
        required: true
      CI_GITHUB_TOKEN:
        required: true

jobs:
  build:
    runs-on: self-hosted
    name: Build Artifact
    steps:
      - name: checkout git
        uses: actions/checkout@v3
      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.ARTIFACT_REGISTRY_HOST }}
          username: _json_key_base64
          password: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: ${{ inputs.GO_MOD_PATH }}
      - name: Get Go version
        id: go_version
        run: echo ::set-output name=GO_VERSION::$(go version | awk '{print $3}')
      - name: Run Goreleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: ${{ inputs.GORELEASER_VERSION }}
          args: ${{ inputs.GORELEASER_ARGS }}
        env:
          GOPRIVATE: ${{ inputs.GOPRIVATE }}
          CGO_ENABLED: ${{ inputs.CGO_ENABLED }}
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
          GOVERSION: ${{ steps.go_version.outputs.GO_VERSION }}
          REGISTRY: ${{ inputs.ARTIFACT_REGISTRY_HOST }}/${{ inputss.GCP_PROJECT }}/${{ inputs.ARTIFACT_REGISTRY_REPO }}
      - name: Docker push
        run: docker push ${REGISTRY}/${{ github.event.repository.name }}:${{ inputs.APPLICATION_VERSION }}
