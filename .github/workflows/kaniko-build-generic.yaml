name: Kaniko Build

on:
  workflow_call:
    inputs:
      # Image name to be built (e.g. my-app-name/container-image-name)
      IMAGE:
        required: true
        type: string
        default: 'latest'

      # Path to Dockerfile (e.g. path/to/Dockerfile)
      DOCKERFILE_PATH:
        required: false
        type: string
        default: 'Dockerfile'

      # Path to Docker context
      CONTEXT_PATH:
        required: false
        type: string
        default: '.'

      # GCP Project containing Artifact Registry repository
      GCP_PROJECT:
        required: false
        type: string

      # Artifact Registry host/region
      ARTIFACT_REGISTRY_HOST:
        required: false
        type: string
        default: us-central1-docker.pkg.dev

      # Artifact Registry repository
      ARTIFACT_REGISTRY_REPO:
        required: false
        type: string
        default: cyderes-helm-repo

      # Credentials to use for GCP Artifact Registry. Should be secrets available to calling workflow project.
    secrets:
      GCP_ARGO_SERVICE_ACCOUNT:
        required: true

      # GitHub service account token used for GitHub NPM registry
      CI_GITHUB_TOKEN:
        required: true

jobs:

  build:
    runs-on: self-hosted
    name: Build
    steps:
      - name: checkout git
        uses: actions/checkout@v3
      - name: Set environment
        id: set_env
        run: |
          if [[ -n "${{ inputs.GCP_PROJECT }}" ]]; then
            echo ::set-output name=GCP_PROJECT::${{ inputs.GCP_PROJECT }}
            echo ::set-output name=PUSH_FLAG::--no-push
          elif [[ "${{ github.event_name }}" =~ (^release$) ]]; then
            echo ::set-output name=GCP_PROJECT::cyderes-prod
            echo ::set-output name=PUSH_FLAG::
          else
            echo ::set-output name=GCP_PROJECT::cyderes-dev
            echo ::set-output name=PUSH_FLAG::--no-push
          fi

      - name: Kaniko build
        uses: aevea/action-kaniko@v0.9.0
        with:
          image: ${{ inputs.IMAGE }}
          registry: ${{ inputs.ARTIFACT_REGISTRY_HOST }}/${{ steps.set_env.outputs.GCP_PROJECT }}/${{ inputs.ARTIFACT_REGISTRY_REPO }}
          username: "_json_key_base64"
          password: ${{ secrets.GCP_ARGO_SERVICE_ACCOUNT }}
          path: ${{ inputs.CONTEXT_PATH }}
          build_file: ${{ inputs.DOCKERFILE_PATH }}
          extra_args: --build-arg=GITHUB_ACCESS_TOKEN=${{ secrets.CI_GITHUB_TOKEN }} ${{ steps.set_env.outputs.PUSH_FLAG }}
          cache: true
          cache_registry: ${{ inputs.ARTIFACT_REGISTRY_HOST }}/${{ steps.set_env.outputs.GCP_PROJECT }}/${{ inputs.ARTIFACT_REGISTRY_REPO }}/${{ inputs.IMAGE }}/cache