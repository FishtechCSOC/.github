name: Build and Package

on:
  workflow_call:
    inputs:

      # Version tag to use when pushing to Production repository. Defaults to 'latest' for dev, GitHub release tag for Prod
      APP_VERSION:
        required: false
        type: string
        default: "latest"

      # GCP Project containing Artifact Registry repository
      GCP_PROJECT:
        required: false
        type: string

      # Artifact Registry host/region
      ARTIFACT_REGISTRY_HOST:
        required: false
        type: string
        default: us-central1-docker.pkg.dev

      # Artifact Registry repository
      ARTIFACT_REGISTRY_REPO:
        required: false
        type: string
        default: cyderes-helm-repo

    secrets:
      GCP_ARGO_SERVICE_ACCOUNT:
        required: false
      GCP_ARGO_SERVICE_ACCOUNT_DEV:
        required: false

jobs:

  set-env:
    name: Set environment
    runs-on: self-hosted
    steps:
    - name: Set environment
      id: set_env
      run: |
        if [[ "${{ github.event_name }}" =~ (^release$) ]]; then
          echo ::set-output name=GCP_PROJECT::cyderes-prod
          echo ::set-output name=PUSH_FLAG::
          echo ::set-output name=APP_VERSION_TAG::${{ github.ref_name }}
          echo ::set-output name=GCP_ARGO_SERVICE_ACCOUNT::${{ secrets.GCP_ARGO_SERVICE_ACCOUNT }}
        elif [[ "${{ github.event_name }}" =~ (^push$) ]]; then
          echo ::set-output name=GCP_PROJECT::cyderes-dev
          echo ::set-output name=PUSH_FLAG::
          echo ::set-output name=APP_VERSION_TAG::latest
          echo ::set-output name=GCP_ARGO_SERVICE_ACCOUNT::${{ secrets.GCP_ARGO_SERVICE_ACCOUNT_DEV }}
        else
          echo ::set-output name=GCP_PROJECT::cyderes-dev
          echo ::set-output name=PUSH_FLAG::--no-push
          echo ::set-output name=APP_VERSION_TAG::latest
          echo ::set-output name=GCP_ARGO_SERVICE_ACCOUNT::${{ secrets.GCP_ARGO_SERVICE_ACCOUNT_DEV }}
        fi

    outputs:
      GCP_PROJECT: ${{ steps.set_env.outputs.GCP_PROJECT }}
      GCP_ARGO_SERVICE_ACCOUNT: ${{ steps.set_env.outputs.GCP_ARGO_SERVICE_ACCOUNT }}
      APP_VERSION_TAG: ${{ steps.set_env.outputs.APP_VERSION_TAG }}
      MY_TEST_SECRET: another_value

  get-chart-properties:
    name: Get chart properties
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@master
      name: Checkout ${{ github.ref_name }}
      with:
        ref: "${{ github.ref_name }}"

    - name: Get Helm chart name/version
      id: get-chart-properties
      run: |
        echo "::set-output name=CHART_NAME::$(cat $(find charts | grep Chart.yaml) | grep -E '^name:' | awk '{print $2}' | tr -d '\n\r')"
        echo "::set-output name=CHART_VERSION::$(cat $(find charts | grep Chart.yaml) | grep -E '^version:' | awk '{print $2}' | tr -d '\n\r')"

    outputs:
      chart_name: ${{ steps.get-chart-properties.outputs.CHART_NAME }}
      chart_version: ${{ steps.get-chart-properties.outputs.CHART_VERSION }}

  package-chart:
    name: Package and push Helm chart
    needs:
      - get-chart-properties
      - set-env
    runs-on: self-hosted
    steps:
    - name: Set environment
      id: set_env
      run: |
        if [[ "${{ github.event_name }}" =~ (^release$) ]]; then
          echo ::set-output name=GCP_PROJECT::cyderes-prod
          echo ::set-output name=PUSH_FLAG::
          echo ::set-output name=APP_VERSION_TAG::${{ github.ref_name }}
          echo ::set-output name=GCP_ARGO_SERVICE_ACCOUNT::${{ secrets.GCP_ARGO_SERVICE_ACCOUNT }}
        elif [[ "${{ github.event_name }}" =~ (^push$) ]]; then
          echo ::set-output name=GCP_PROJECT::cyderes-dev
          echo ::set-output name=PUSH_FLAG::
          echo ::set-output name=APP_VERSION_TAG::latest
          echo ::set-output name=GCP_ARGO_SERVICE_ACCOUNT::${{ secrets.GCP_ARGO_SERVICE_ACCOUNT_DEV }}
        else
          echo ::set-output name=GCP_PROJECT::cyderes-dev
          echo ::set-output name=PUSH_FLAG::--no-push
          echo ::set-output name=APP_VERSION_TAG::latest
          echo ::set-output name=GCP_ARGO_SERVICE_ACCOUNT::${{ secrets.GCP_ARGO_SERVICE_ACCOUNT_DEV }}
        fi
    - name: Pull chart repo
      uses: actions/checkout@master

    - name: Push Helm chart to Artifact Registry
      uses: FishtechCSOC/.github/.github/actions/helm-push@main
      with:
        useOCIRegistry: true
        username: '_json_key_base64'
        password: ${{ steps.set_env.outputs.GCP_ARGO_SERVICE_ACCOUNT }}
        access-token: ${{ steps.set_env.outputs.GCP_ARGO_SERVICE_ACCOUNT }}
        registry-url: oci://${{ inputs.ARTIFACT_REGISTRY_HOST }}/${{ needs.set-env.outputs.GCP_PROJECT }}/${{ inputs.ARTIFACT_REGISTRY_REPO }}
        force: true
        chart-folder: charts/${{ needs.get-chart-properties.outputs.chart_name }}
        version: ${{ needs.get-chart-properties.outputs.chart_version }}
        appVersion: ${{ needs.set-env.outputs.APP_VERSION_TAG }}