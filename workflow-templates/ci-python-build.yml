name: Python build

# This is just a simple working exmaple that we can build off of.
# It uses conditionals to set env vars and has GCP registration to 
# successfully push a docker image to GCR. It runs testing and shows
# how to decide when this workflow should be ran PR/merge main/release.
# This should be used as a starting point/template if/when we go to
# run these in production but will obviously require fine tuning and
# configuration for different project types.

# We may not want to run this on release but rather
# take the artifact from the dev build and copy/push/promote
# it to wherever production needs to go. You know don't
# build it again type of thing if it's working in dev
on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
  release:
    types:
      - created

env:
  # Set top lvl env vars for use later anywhere in the action/workflow.
  # github.<THING> can be found https://docs.github.com/en/actions/reference/environment-variables
  ENVIRONMENT: ${{ github.event_name == 'pull_request' && 'development' ||  github.event_name == 'push' && 'development' || 'production' }}
  PROJECT_ID: ${{ github.event_name == 'pull_request' && 'cyderes-dev' ||  github.event_name == 'push' && 'cyderes-dev' || 'cyderes-prod' }}
  GCP_KEY: ${{ github.event_name == 'pull_request' && secrets.GCP_DEV_SERVICE_ACCOUNT ||  github.event_name == 'push' && secrets.GCP_DEV_SERVICE_ACCOUNT || secrets.GCP_PROD_SERVICE_ACCOUNT }}

jobs:
  # A change for dependabot hopefully
  # Run the tests
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # some sort of liniting like flake8 or pylint
        echo "do some linting later"
    - name: Test with pytest
      run: |
        pytest -v

  # Build the artifacts if test succeed
  build:
    name: Build image
    runs-on: ubuntu-latest
    # needs ensures that the test job was successful before running
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ env.GCP_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
      # Build docker image
      - name: Image
        # This needs to be better configured for parameters
        run: |-
          docker build --build-arg BUILD_ENV=$ENVIRONMENT -t gcr.io/$PROJECT_ID/cyderes/cyclops-provisioning:0.0.0 .
      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker -q
      # Push image to Google Container Registry
      - name: Build
        run: |-
          docker push gcr.io/$PROJECT_ID/cyderes/cyclops-provisioning:0.0.0
